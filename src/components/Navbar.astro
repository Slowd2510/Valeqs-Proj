---
import { getLanguage, loadTranslations } from '../utils/language.js';

// Sprache ermitteln und Übersetzungen laden
const lang = await getLanguage(Astro.request);
const t = await loadTranslations(lang);

// Prop für die aktuelle Seite
const { activePage = "home" } = Astro.props;

// Navigationspunkte mit Übersetzungen
const navItems = [
  { name: lang === 'de' ? 'Startseite' : 'Home', path: lang === 'de' ? '/de/' : '/', id: "home" },
  { name: 'Info', path: lang === 'de' ? '/de/info' : '/info', id: "info" },
  { name: lang === 'de' ? 'Nutzungsbedingungen' : 'Terms', path: lang === 'de' ? '/de/terms' : '/terms', id: "terms" },
  { name: lang === 'de' ? 'Kontakt' : 'Contact', path: lang === 'de' ? '/de/contact' : '/contact', id: "contact" }
];

const ranksItem = { name: lang === 'de' ? 'Ränge' : 'Ranks', path: "https://shop.valeqs.de", id: "ranks" };

// Sprachumschalter-Pfade werden nicht mehr benötigt
---

<header class="site-header">
  <div class="header-container">
    <div class="logo">
      <a href={lang === 'de' ? '/de/' : '/'}>
        <img src="/images/valeqs_logo.jpg" alt="VALEQS" class="logo-image">
      </a>
    </div>
    
    <div class="nav-container">
      <nav class="main-nav">
        {navItems.map(item => (
          <a 
            href={item.path} 
            class={activePage === item.id ? "active" : ""}
          >
            {item.name}
          </a>
        ))}
      </nav>
      
      <div class="action-buttons">
        <a href={ranksItem.path} class={`ranks-button ${activePage === ranksItem.id ? "active" : ""}`}>
          {ranksItem.name}
        </a>
      </div>
    </div>
    
    <button class="mobile-menu-toggle" aria-label="Toggle mobile menu">
      <span></span>
      <span></span>
      <span></span>
    </button>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.querySelector('.mobile-menu-toggle');
    const navContainer = document.querySelector('.nav-container');
    
    menuToggle?.addEventListener('click', () => {
      navContainer?.classList.toggle('active');
      menuToggle.classList.toggle('active');
    });
    
    document.addEventListener('click', (event) => {
      const target = event.target as HTMLElement;
      const isNavOpen = navContainer?.classList.contains('active');
      
      if (isNavOpen && 
          !target.closest('.nav-container') && 
          !target.closest('.mobile-menu-toggle')) {
        navContainer?.classList.remove('active');
        menuToggle?.classList.remove('active');
      }
    });
  });
</script>

<style>
  :root {
    --bg-primary: #2c2f33;
    --bg-secondary: #23272a;
    --bg-tertiary: #1a1c1f;
    
    --text-normal: #ffffff;
    --text-muted: #99aab5;
    --text-heading: #ffffff;
    
    --interactive: #b9bbbe;
    --interactive-hover: #ffffff;
    --interactive-active: #ffffff;
    
    --accent-blue: #5865f2;
    --accent-glow: rgba(88, 101, 242, 0.5);
    
    --logo-height: 45px;
  }
  
  .site-header {
    position: sticky;
    top: 0;
    padding: 0;
    width: 100%;
    z-index: 100;
    background-color: var(--bg-tertiary);
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.3);
    border-bottom: 2px solid var(--accent-blue);
  }
  
  .header-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 30px;
    height: 80px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .logo {
    display: flex;
    align-items: center;
  }
  
  .logo a {
    display: flex;
    align-items: center;
    text-decoration: none;
  }
  
  .logo-image {
    height: calc(var(--logo-height) * 1.2);
    width: auto;
    border-radius: 50%;
    object-fit: contain;
    transition: transform 0.3s ease;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  }
  
  .logo-image:hover {
    transform: scale(1.05);
  }
  
  .nav-container {
    display: flex;
    align-items: center;
    gap: 30px;
  }
  
  .main-nav {
    display: flex;
    gap: 10px;
    align-items: center;
  }
  
  .main-nav a {
    color: var(--text-normal);
    text-decoration: none;
    padding: 10px 18px;
    border-radius: 6px;
    font-weight: 600;
    font-size: 16px;
    transition: all 0.3s ease;
    text-align: center;
    position: relative;
    overflow: hidden;
  }
  
  .main-nav a:before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background-color: var(--accent-blue);
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }
  
  .main-nav a:hover {
    color: var(--interactive-hover);
    background-color: rgba(255, 255, 255, 0.08);
  }
  
  .main-nav a:hover:before {
    width: 80%;
  }
  
  .main-nav a.active {
    color: var(--interactive-active);
    background-color: rgba(88, 101, 242, 0.15);
    box-shadow: 0 0 15px rgba(88, 101, 242, 0.15);
  }
  
  .main-nav a.active:before {
    width: 80%;
  }
  
  /* Action Buttons Container */
  .action-buttons {
    display: flex;
    align-items: center;
  }
  
  /* Ranks button styling */
  .ranks-button {
    color: var(--text-heading);
    text-decoration: none;
    padding: 10px 20px;
    border: 2px solid var(--accent-blue);
    border-radius: 8px;
    font-weight: 700;
    font-size: 16px;
    transition: all 0.3s ease;
    text-align: center;
    background-color: var(--accent-blue);
    position: relative;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(88, 101, 242, 0.3);
  }
  
  .ranks-button:before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transform: rotate(45deg);
    transition: transform 0.6s;
  }
  
  .ranks-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(88, 101, 242, 0.5);
    filter: brightness(1.1);
  }
  
  .ranks-button:hover:before {
    transform: rotate(45deg) translate(80%, 80%);
  }
  
  .ranks-button.active {
    background-color: var(--accent-blue);
    color: white;
    box-shadow: 0 0 15px var(--accent-glow);
  }
  
  /* Language Switch Button - entfernt */
  
  /* Mobile menu toggle */
  .mobile-menu-toggle {
    display: none;
    background: transparent;
    border: none;
    width: 36px;
    height: 28px;
    position: relative;
    cursor: pointer;
    z-index: 101;
    padding: 0;
  }
  
  .mobile-menu-toggle span {
    display: block;
    width: 100%;
    height: 3px;
    background-color: var(--text-normal);
    position: absolute;
    border-radius: 3px;
    transition: all 0.3s ease;
  }
  
  .mobile-menu-toggle span:nth-child(1) {
    top: 0;
  }
  
  .mobile-menu-toggle span:nth-child(2) {
    top: 12px;
  }
  
  .mobile-menu-toggle span:nth-child(3) {
    top: 24px;
  }
  
  .mobile-menu-toggle.active span:nth-child(1) {
    transform: translateY(12px) rotate(45deg);
  }
  
  .mobile-menu-toggle.active span:nth-child(2) {
    opacity: 0;
  }
  
  .mobile-menu-toggle.active span:nth-child(3) {
    transform: translateY(-12px) rotate(-45deg);
  }
  
  /* Responsive Styles */
  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: block;
    }
    
    .nav-container {
      position: absolute;
      top: 80px;
      left: 0;
      right: 0;
      background-color: var(--bg-tertiary);
      padding: 20px;
      flex-direction: column;
      align-items: center;
      gap: 15px;
      display: none;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
      border-bottom: 2px solid var(--accent-blue);
      animation: slideDown 0.3s ease-out forwards;
    }
    
    @keyframes slideDown {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .nav-container.active {
      display: flex;
    }
    
    .main-nav {
      flex-direction: column;
      width: 100%;
    }
    
    .main-nav a, .ranks-button {
      width: 100%;
      text-align: center;
      padding: 15px 20px;
      margin-bottom: 5px;
    }
    
    .main-nav a:before {
      display: none;
    }
    
    .action-buttons {
      flex-direction: column;
      width: 100%;
    }
  }
</style>