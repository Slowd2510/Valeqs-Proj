---
import Layout from '../layouts/Layout.astro';
import { readFile } from 'fs/promises';
import path from 'path';

// Define interfaces for type safety
interface Section {
  heading: string;
  content?: string[];
  list?: string[];
}

interface PrivacyData {
  title: string;
  sections: Section[];
}

// Lade Konfigurationsdaten
let privacyData: PrivacyData = { title: "Privacy Policy", sections: [] }; // Standardwerte mit Typisierung
try {
  const configPath = path.join(process.cwd(), 'config.json');
  const configContent = await readFile(configPath, 'utf-8');
  const config = JSON.parse(configContent);
  if (config.privacy) {
    privacyData = config.privacy;
  } else {
    console.warn("Privacy data not found in config.json");
  }
} catch (error) {
  console.error("Error loading or parsing config.json for Privacy Policy:", error);
}
---

<Layout title={privacyData.title}>
    <main class="container mx-auto px-4 py-8 max-w-4xl">
        <div class="privacy-box">
            <h1 class="text-3xl font-bold mb-6">{privacyData.title}</h1>

            {privacyData.sections.map(section => (
                <>
                    <h2 class="text-2xl font-semibold mb-3 mt-6">{section.heading}</h2>
                    {/* Render paragraphs if they exist */}
                    {section.content?.map(paragraph => (
                        <p class="mb-4" set:html={paragraph}></p>
                    ))}
                    {/* Render list if it exists */}
                    {section.list && (
                        <ul class="list-disc ml-6 mb-4">
                            {section.list.map(item => (
                                <li set:html={item}></li>
                            ))}
                        </ul>
                    )}
                </>
            ))}

        </div>
    </main>
</Layout>

<style>
  /* Styles sind identisch mit der vorherigen Version von privacy.astro */
  .privacy-box {
    background-color: #2d2d2d; /* Dark background */
    padding: 2rem;
    border-radius: 12px;
    border: 1px solid #444; /* Darker border */
    box-shadow: 0 2px 4px rgba(0,0,0,0.2); /* Adjusted shadow for dark bg */
  }

  .privacy-box h2 {
    margin-top: 1.5rem;
  }

  .privacy-box p, .privacy-box ul {
    color: #e0e0e0; /* Light gray text */
    line-height: 1.6;
  }

  .privacy-box h1, .privacy-box h2 {
     color: #ffffff; /* White headings */
  }

  /* Beibehaltung der Tailwind Utility-Klassen-Styles */
  .container {
    margin-left: auto;
    margin-right: auto;
  }
  .mx-auto {
    margin-left: auto;
    margin-right: auto;
  }
  .px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  .py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
  .max-w-4xl {
    max-width: 56rem;
  }
  .text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  .font-bold {
    font-weight: 700;
  }
  .mb-6 {
    margin-bottom: 1.5rem;
  }
  .text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .font-semibold {
    font-weight: 600;
  }
  .mb-3 {
    margin-bottom: 0.75rem;
  }
  .mt-6 {
     margin-top: 1.5rem;
  }
  .mb-4 {
    margin-bottom: 1rem;
  }
  .list-disc {
    list-style-type: disc;
  }
  .ml-6 {
    margin-left: 1.5rem;
  }

</style>
