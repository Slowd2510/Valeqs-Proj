---
import Layout from '../layouts/Layout.astro';
import { readdir, readFile } from 'fs/promises';
import path from 'path';
import { getLanguage, loadTranslations } from '../utils/language.js';
import type { Translations } from '../types/translations.js';


const userLang = await getLanguage(Astro.request);
const t = await loadTranslations(userLang) as Translations;





// Server info
const serverInfo = {
  ip: "valeqs.de",
  version: "Java 1.21.4",
  status: t.server.status, // Translated
  players: "132/200",  // Could be dynamically fetched
  uptime: "99.8%"
};

// Load blog posts from the blogs directory
async function loadBlogPosts() {
  try {
    const blogsDir = path.join(process.cwd(), 'src', 'blogs');
    const files = await readdir(blogsDir);
    const jsonFiles = files.filter(file => file.endsWith('.json'));
    
    const posts = await Promise.all(jsonFiles.map(async (file) => {
      const filePath = path.join(blogsDir, file);
      const content = await readFile(filePath, 'utf8');
      const blogData = JSON.parse(content);
      
      // Get blog content based on language
      const title = userLang === 'de' && blogData.title_de ? 
        blogData.title_de : blogData.title;
      const description = userLang === 'de' && blogData.description_de ? 
        blogData.description_de : blogData.description;
      
      // Use locale-specific date formatting
      const dateFormat = userLang === 'de' ? 'de-DE' : 'en-US';
      const dateOptions: Intl.DateTimeFormatOptions = {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      };
      
      // Transform blog data to news post format
      let postDate;
      try {
        // Try to create a date object first
        const dateObj = new Date(blogData.timestamp);
        postDate = dateObj.toLocaleDateString(dateFormat, dateOptions);
      } catch (e) {
        // Fallback to current date if timestamp is invalid
        postDate = new Date().toLocaleDateString(dateFormat, dateOptions);
      }
      
      return {
        id: parseInt(file.split('-')[1].split('.')[0]),
        title: title || 'Untitled Post',
        date: postDate,
        content: description || '',
        image: blogData.imageUrl || "/images/news/update.jpg"
      };
    }));
    
    // Sort by date (newest first)
    return posts.sort((a, b) => b.id - a.id);
  } catch (error) {
    console.error('Error loading blog posts:', error);
    // Fallback to default posts
    return defaultNewsPosts;
  }
}

// Default news posts as fallback
const defaultNewsPosts = [
  {
    id: 1,
    title: userLang === 'de' ? "Server Update 1.20.4" : "Server Update 1.20.4",
    date: userLang === 'de' ? "19. März 2025" : "March 19, 2025",
    content: userLang === 'de' 
      ? "Wir haben den Server auf Minecraft 1.20.4 aktualisiert. Alle wichtigen Plugins wurden aktualisiert und für bessere Leistung optimiert. Wenn du auf Fehler stößt, melde sie bitte in unserem Discord-Server."
      : "We've updated the server to Minecraft 1.20.4. All major plugins have been updated and optimized for better performance. If you encounter any bugs, please report them in our Discord server.",
    image: "/images/news/update.jpg"
  },
  {
    id: 2,
    title: userLang === 'de' ? "Kartenreset: Ressourcenwelt" : "Map Reset: Resource World",
    date: userLang === 'de' ? "15. März 2025" : "March 15, 2025",
    content: userLang === 'de'
      ? "Die Ressourcenwelt wird am 25. März zurückgesetzt. Stelle sicher, dass du alle Ressourcen sammelst und deine Items vor diesem Datum in die Hauptwelt bringst. Die neue Welt wird verbesserte Generierungseinstellungen haben."
      : "The resource world will be reset on March 25th. Make sure to gather all resources and move your items to the main world before this date. The new world will feature enhanced generation settings.",
    image: "/images/news/reset.jpg"
  },
  {
    id: 3,
    title: userLang === 'de' ? "Wochenend-Event: Schatzsuche" : "Weekend Event: Treasure Hunt",
    date: userLang === 'de' ? "10. März 2025" : "March 10, 2025",
    content: userLang === 'de'
      ? "Nimm an unserer Wochenend-Schatzsuche teil! In der gesamten Welt wurden versteckte Truhen mit wertvoller Beute platziert. Der erste Spieler, der alle 10 Truhen findet, gewinnt einen besonderen Preis."
      : "Join our weekend treasure hunt! Hidden chests have been placed throughout the world with valuable loot. First player to find all 10 chests wins a special prize.",
    image: "/images/news/event.jpg"
  }
];

// Load posts from filesystem or use defaults if folder doesn't exist yet
const newsPosts = await loadBlogPosts();
---

<Layout title="Valeqs - Minecraft Server">



  <div class="page-container">
    <!-- Navigation -->
    <header class="site-header">
      <div class="logo">VALEQS</div>
      <nav class="main-nav">
        <a href="/" class="active">{t.navigation.home}</a>
        <a href="/news">{t.navigation.news}</a>
        <a href="/info">{t.navigation.info}</a>
        <a href="/contact">{t.navigation.contact}</a>
        <a href="/ranks">{t.navigation.ranks}</a>
      </nav>
      <button class="mobile-menu-toggle" aria-label="Toggle mobile menu">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </header>

    <main>
      <!-- Server Connect Section -->
      <section class="server-connect">
        <div class="server-status-indicator">
          <span class={`status-dot ${serverInfo.status.toLowerCase()}`}></span>
          <span class="status-text">{serverInfo.status}</span>
          <span class="players-count">{serverInfo.players} {t.server.players}</span>
        </div>
        
        <h1>{t.server.joinServer}</h1>
        
        <div class="server-ip-container">
          <div class="server-ip">
            <span class="ip-text">{serverInfo.ip}</span>
            <button id="copy-ip" class="copy-button">{t.server.copy}</button>
          </div>
          <div class="server-version">{serverInfo.version}</div>
        </div>
        
        <div class="server-stats">
          <div class="stat">
            <div class="stat-value">{serverInfo.uptime}</div>
            <div class="stat-label">{t.server.uptime}</div>
          </div>
        </div>
      </section>

      <!-- Server Info Section -->
      <section class="server-info">
        <div class="info-card">
          <h2>{t.server.serverInfo}</h2>
          <p>{t.serverDescription}</p>
          
          <div class="info-details">
            <div class="info-item">
              <span class="info-label">{t.serverDetails.worldBorder}:</span>
              <span class="info-value">{t.serverDetails.worldBorderValue}</span>
            </div>
            <div class="info-item">
              <span class="info-label">{t.serverDetails.mapReset}:</span>
              <span class="info-value">{t.serverDetails.mapResetValue}</span>
            </div>
            <div class="info-item">
              <span class="info-label">{t.serverDetails.difficulty}:</span>
              <span class="info-value">{t.serverDetails.difficultyValue}</span>
            </div>
          </div>
          
          <div class="discord-invite">
            <a href="https://discord.gg/valeqs" class="discord-button">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512" class="discord-icon">
                <path fill="currentColor" d="M524.531,69.836a1.5,1.5,0,0,0-.764-.7A485.065,485.065,0,0,0,404.081,32.03a1.816,1.816,0,0,0-1.923.91,337.461,337.461,0,0,0-14.9,30.6,447.848,447.848,0,0,0-134.426,0,309.541,309.541,0,0,0-15.135-30.6,1.89,1.89,0,0,0-1.924-.91A483.689,483.689,0,0,0,116.085,69.137a1.712,1.712,0,0,0-.788.676C39.068,183.651,18.186,294.69,28.43,404.354a2.016,2.016,0,0,0,.765,1.375A487.666,487.666,0,0,0,176.02,479.918a1.9,1.9,0,0,0,2.063-.676A348.2,348.2,0,0,0,208.12,430.4a1.86,1.86,0,0,0-1.019-2.588,321.173,321.173,0,0,1-45.868-21.853,1.885,1.885,0,0,1-.185-3.126c3.082-2.309,6.166-4.711,9.109-7.137a1.819,1.819,0,0,1,1.9-.256c96.229,43.917,200.41,43.917,295.5,0a1.812,1.812,0,0,1,1.924.233c2.944,2.426,6.027,4.851,9.132,7.16a1.884,1.884,0,0,1-.162,3.126,301.407,301.407,0,0,1-45.89,21.83,1.875,1.875,0,0,0-1,2.611,391.055,391.055,0,0,0,30.014,48.815,1.864,1.864,0,0,0,2.063.7A486.048,486.048,0,0,0,610.7,405.729a1.882,1.882,0,0,0,.765-1.352C623.729,277.594,590.933,167.465,524.531,69.836ZM222.491,337.58c-28.972,0-52.844-26.587-52.844-59.239S193.056,219.1,222.491,219.1c29.665,0,53.306,26.82,52.843,59.239C275.334,310.993,251.924,337.58,222.491,337.58Zm195.38,0c-28.971,0-52.843-26.587-52.843-59.239S388.437,219.1,417.871,219.1c29.667,0,53.307,26.82,52.844,59.239C470.715,310.993,447.538,337.58,417.871,337.58Z"/>
              </svg>
              {t.discord}
            </a>
          </div>
        </div>
      </section>

      <!-- News Section -->
      <section class="news-section">
        <h2 class="section-title">{t.news.latestNews}</h2>
        
        <div class="news-container">
          {newsPosts.map(post => (
            <article class="news-post">
              {post.image && (
                <div class="post-image">
                  <img src={post.image} alt={post.title} loading="lazy" />
                </div>
              )}
              
              <div class="post-content">
                <div class="post-header">
                  <h3 class="post-title">{post.title}</h3>
                  <time class="post-date">{post.date}</time>
                </div>
                
                <p class="post-text">{post.content}</p>
              </div>
            </article>
          ))}
        </div>
      </section>
    </main>

    <!-- Footer -->
    <footer class="site-footer">
      <div class="footer-content">
        <div class="footer-info">
          <span>{t.footer.copyright}</span>
          <span>{t.footer.disclaimer}</span>
        </div>
        
        <div class="footer-links">
          <a href="/terms">{t.footer.terms}</a>
          <a href="/privacy">{t.footer.privacy}</a>
          <a href="/rules">{t.footer.rules}</a>
        </div>
      </div>
    </footer>
  </div>
</Layout>

<script is:inline>
  // Background Slideshow Functionality
  document.addEventListener('DOMContentLoaded', () => {
    const slides = document.querySelectorAll('.slide');
    let currentSlide = 0;
    
    // Get language from window object
    const userLanguage = window.userLanguage || 'en';
    
    // TypeScript won't check this at runtime
    if (!window.userLanguage) {
      window.userLanguage = userLanguage;
    }
    
    // Load translations for client-side content
    async function loadClientTranslations() {
      try {
        const response = await fetch(`/api/translations?lang=${userLanguage}`);
        if (response.ok) {
          return await response.json();
        }
        return null;
      } catch (error) {
        console.error('Failed to load client translations:', error);
        return null;
      }
    }
    
    // Initialize: hide all slides except the first one
    slides.forEach((slide, index) => {
      if (index !== 0) {
        slide.classList.add('inactive');
      }
    });
    
    function rotateSlides() {
      // Fade out current slide
      slides[currentSlide].classList.add('fade-out');
      
      setTimeout(() => {
        // Hide current slide
        slides[currentSlide].classList.add('inactive');
        slides[currentSlide].classList.remove('fade-out');
        
        // Move to next slide
        currentSlide = (currentSlide + 1) % slides.length;
        
        // Show and fade in next slide
        slides[currentSlide].classList.remove('inactive');
        slides[currentSlide].classList.add('fade-in');
        
        setTimeout(() => {
          slides[currentSlide].classList.remove('fade-in');
        }, 1000);
      }, 1000);
    }
    
    // Rotate slides every 8 seconds
    setInterval(rotateSlides, 8000);
    
    // Load translations for client-side uses
    loadClientTranslations().then(translations => {
      // Copy IP functionality
      document.getElementById('copy-ip')?.addEventListener('click', () => {
        const ipElement = document.querySelector('.ip-text');
        const serverIp = ipElement?.textContent || '';
        navigator.clipboard.writeText(serverIp)
          .then(() => {
            const button = document.getElementById('copy-ip');
            if (button) {
              // Use translated text if available
              const copiedText = translations?.server?.copied || 'Copied!';
              const copyText = translations?.server?.copy || 'Copy';
              
              button.textContent = copiedText;
              setTimeout(() => {
                button.textContent = copyText;
              }, 2000);
            }
          })
          .catch(err => {
            console.error('Could not copy text: ', err);
          });
      });
    });
    
    // Mobile menu toggle
    const menuToggle = document.querySelector('.mobile-menu-toggle');
    const mainNav = document.querySelector('.main-nav');
    
    menuToggle?.addEventListener('click', () => {
      mainNav?.classList.toggle('active');
    });
  });
</script>

<style>
  /* Variables - Updated to match ranks.astro */
  :root {
    /* Discord-inspired colors but slightly softer */
    --background: #23272A;
    --bg-secondary: #2C2F33;
    --bg-light: #36393F;
    
    /* Text colors */
    --text-normal: #DCDDDE;
    --text-muted: #8e9297;
    --text-heading: #FFFFFF;
    
    /* Button colors */
    --button-primary: #5865F2; /* Discord blurple */
    --button-primary-hover: #4752c4;
    --button-secondary: #4f545c;
    --button-secondary-hover: #5d6269;
    
    /* Other colors */
    --premium-color: #99AAB5;
    --king-color: #FFA500;
    --error-color: #F04747;
    --status-online: #3ba55c;
    --status-offline: #ed4245;
    
    /* Border radius */
    --radius-sm: 4px;
    --radius-md: 8px;
    --radius-lg: 12px;
    
    /* Transitions */
    --transition-fast: 0.15s ease;
    --transition-normal: 0.25s ease;
  }
  
  /* Reset & Base Styles */
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
    background-color: var(--background);
    color: var(--text-normal);
    line-height: 1.5;
  }
  
  /* Background Slideshow */
  .background-slideshow {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
  }
  
  .slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    transition: opacity 1s ease;
  }
  
  .slide.inactive {
    opacity: 0;
    pointer-events: none;
  }
  
  .slide.fade-in {
    animation: fadeIn 1s forwards;
  }
  
  .slide.fade-out {
    animation: fadeOut 1s forwards;
  }
  
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, rgba(32, 34, 37, 0.85) 0%, rgba(15, 17, 19, 0.95) 100%);
    z-index: -1;
  }
  
  /* Page Container - Matches ranks.astro */
  .page-container {
    width: 100%;
    max-width: 1000px;
    margin: 0 auto;
    padding: 0 1rem;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }
  
  /* Header & Navigation */
  .site-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 0;
    margin-bottom: 2rem;
  }
  
  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-heading);
    letter-spacing: 1px;
  }
  
  .main-nav {
    display: flex;
    gap: 1rem;
  }
  
  .main-nav a {
    color: var(--text-muted);
    text-decoration: none;
    padding: 0.5rem 0.75rem;
    border-radius: var(--radius-md);
    transition: all var(--transition-fast);
    font-weight: 500;
  }
  
  .main-nav a:hover {
    color: var(--text-heading);
    background-color: rgba(255, 255, 255, 0.05);
  }
  
  .main-nav a.active {
    color: var(--text-heading);
    background-color: rgba(255, 255, 255, 0.08);
  }
  
  .mobile-menu-toggle {
    display: none;
    background: transparent;
    border: none;
    width: 30px;
    height: 24px;
    position: relative;
    cursor: pointer;
  }
  
  .mobile-menu-toggle span {
    display: block;
    width: 100%;
    height: 2px;
    background-color: var(--text-normal);
    position: absolute;
    transition: all 0.3s ease;
  }
  
  .mobile-menu-toggle span:nth-child(1) {
    top: 0;
  }
  
  .mobile-menu-toggle span:nth-child(2) {
    top: 10px;
  }
  
  .mobile-menu-toggle span:nth-child(3) {
    top: 20px;
  }
  
  /* Server Connect Section */
  .server-connect {
    text-align: center;
    padding: 2.5rem 0;
  }
  
  .server-status-indicator {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
    padding: 0.5rem 1rem;
    background-color: var(--bg-secondary);
    border-radius: 2rem;
  }
  
  .status-dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
  }
  
  .status-dot.online {
    background-color: var(--status-online);
    box-shadow: 0 0 10px var(--status-online);
  }
  
  .status-dot.offline {
    background-color: var(--status-offline);
  }
  
  .status-text {
    font-weight: 600;
    font-size: 0.9rem;
    color: var(--text-heading);
  }
  
  .players-count {
    font-size: 0.9rem;
    color: var(--text-muted);
    margin-left: 0.5rem;
  }
  
  .server-connect h1 {
    font-size: 2.5rem;
    color: var(--text-heading);
    margin-bottom: 1.5rem;
    font-weight: 700;
  }
  
  .server-ip-container {
    margin-bottom: 2rem;
  }
  
  .server-ip {
    display: inline-flex;
    align-items: center;
    background-color: var(--bg-secondary);
    border-radius: var(--radius-md);
    padding: 0.75rem 1rem;
    margin-bottom: 0.5rem;
    border: 1px solid rgba(255, 255, 255, 0.05);
  }
  
  .ip-text {
    font-family: monospace;
    font-size: 1.25rem;
    letter-spacing: 1px;
    margin-right: 1rem;
    color: var(--text-heading);
    user-select: all;
  }
  
  .copy-button {
    background-color: var(--button-primary);
    color: white;
    border: none;
    border-radius: var(--radius-sm);
    padding: 0.5rem 1rem;
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 600;
    transition: all var(--transition-fast);
  }
  
  .copy-button:hover {
    background-color: var(--button-primary-hover);
    transform: translateY(-2px);
  }
  
  .server-version {
    font-size: 0.9rem;
    color: var (--text-muted);
  }
  
  .server-stats {
    display: flex;
    justify-content: center;
    gap: 2.5rem;
  }
  
  .stat {
    text-align: center;
  }
  
  .stat-value {
    font-size: 1.5rem;
    font-weight: 700;
    color: var (--text-heading);
  }
  
  .stat-label {
    font-size: 0.9rem;
    color: var(--text-muted);
  }
  
  /* Server Info Section */
  .server-info {
    margin-bottom: 4rem;
  }
  
  .info-card {
    background-color: var(--bg-secondary);
    border-radius: var(--radius-lg);
    padding: 2rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.05);
  }
  
  .info-card h2 {
    font-size: 1.75rem;
    color: var(--text-heading);
    margin-bottom: 1.25rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    font-weight: 700;
  }
  
  .info-card p {
    margin-bottom: 1.5rem;
    line-height: 1.6;
    color: var(--text-normal);
    font-size: 1rem;
  }
  
  .info-details {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }
  
  .info-item {
    display: flex;
    flex-direction: column;
    gap: 0.35rem;
  }
  
  .info-label {
    font-size: 0.9rem;
    color: var(--text-muted);
    font-weight: 500;
  }
  
  .info-value {
    font-size: 1.1rem;
    color: var(--text-heading);
    font-weight: 600;
  }
  
  .discord-invite {
    text-align: center;
    margin-top: 1.5rem;
  }
  
  .discord-button {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    background-color: var(--button-primary);
    color: white;
    text-decoration: none;
    padding: 0.75rem 1.5rem;
    border-radius: var(--radius-md);
    font-weight: 600;
    transition: all var(--transition-fast);
  }
  
  .discord-button:hover {
    background-color: var(--button-primary-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(88, 101, 242, 0.3);
  }
  
  .discord-icon {
    width: 1.25rem;
    height: 1.25rem;
  }
  
  /* News Section */
  .news-section {
    margin-bottom: 4rem;
  }
  
  .section-title {
    font-size: 1.75rem;
    color: var(--text-heading);
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    font-weight: 700;
  }
  
  .news-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .news-post {
    background-color: var(--bg-secondary);
    border-radius: var(--radius-lg);
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: transform var(--transition-normal), box-shadow var(--transition-normal);
  }
  
  .news-post:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
  }
  
  .post-image {
    height: 200px;
    width: 100%;
    overflow: hidden;
  }
  
  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .news-post:hover .post-image img {
    transform: scale(1.05);
  }
  
  .post-content {
    padding: 1.5rem;
  }
  
  .post-header {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    margin-bottom: 1rem;
    flex-wrap: wrap;
    gap: 0.75rem;
  }
  
  .post-title {
    font-size: 1.4rem;
    color: var(--text-heading);
    margin: 0;
    font-weight: 700;
  }
  
  .post-date {
    font-size: 0.9rem;
    color: var(--text-muted);
    font-weight: 500;
  }
  
  .post-text {
    color: var(--text-normal);
    line-height: 1.6;
    margin: 0;
    font-size: 1rem;
  }
  
  /* Footer */
  .site-footer {
    margin-top: auto;
    padding: 2rem 0;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .footer-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
  }
  
  .footer-info {
    display: flex;
    flex-direction: column;
    color: var(--text-muted);
    font-size: 0.9rem;
    gap: 0.25rem;
  }
  
  .footer-links {
    display: flex;
    gap: 1.5rem;
  }
  
  .footer-links a {
    color: var(--text-muted);
    text-decoration: none;
    transition: color var(--transition-fast);
    font-size: 0.9rem;
  }
  
  .footer-links a:hover {
    color: var(--text-normal);
  }
  
  /* Animations */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .site-header {
      padding: 1rem 0;
      margin-bottom: 1.5rem;
    }
    
    .main-nav {
      display: none;
      position: absolute;
      top: 4rem;
      left: 0;
      right: 0;
      background-color: var(--bg-tertiary);
      flex-direction: column;
      align-items: center;
      padding: 1.5rem;
      border-radius: 0 0 var(--radius-md) var(--radius-md);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
      z-index: 1000;
      border: 1px solid rgba(255, 255, 255, 0.05);
    }
    
    .main-nav.active {
      display: flex;
    }
    
    .mobile-menu-toggle {
      display: block;
    }
    
    .mobile-menu-toggle.active span:nth-child(1) {
      transform: translateY(10px) rotate(45deg);
    }
    
    .mobile-menu-toggle.active span:nth-child(2) {
      opacity: 0;
    }
    
    .mobile-menu-toggle.active span:nth-child(3) {
      transform: translateY(-10px) rotate(-45deg);
    }
    
    .server-connect h1 {
      font-size: 2rem;
    }
    
    .post-header {
      flex-direction: column;
      align-items: flex-start;
    }
  }
  
  @media (max-width: 580px) {
    .server-ip {
      flex-direction: column;
      gap: 0.75rem;
      width: 100%;
    }
    
    .ip-text {
      margin-right: 0;
      margin-bottom: 0;
      font-size: 1.1rem;
    }
    
    .copy-button {
      width: 100%;
    }
    
    .server-stats {
      flex-direction: column;
      gap: 1.5rem;
    }
    
    .info-details {
      grid-template-columns: 1fr;
    }
    
    .footer-content {
      flex-direction: column;
      align-items: flex-start;
      gap: 1.5rem;
    }
    
    .footer-links {
      width: 100%;
      justify-content: space-between;
    }
  }
  .news-post.new-post {
    animation: highlightPost 3s ease-in-out;
  }
  
  @keyframes highlightPost {
    0%, 100% { border-color: rgba(255, 255, 255, 0.05); }
    50% { border-color: var(--button-primary); box-shadow: 0 0 15px rgba(88, 101, 242, 0.5); }
  }
</style>